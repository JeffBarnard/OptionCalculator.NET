<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="OptionCalculator.Services.JobScheduler.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
  </configSections>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="Default" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="EventLog Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" source="Enterprise Library Logging" formatter="Default" log="Application" machineName="" traceOutputOptions="None" filter="All"/>
      <add listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" type="PinPoint.EnterpriseLibrary.Extensions.Logging.DebugOutTraceListener, PinPoint.EnterpriseLibrary.Extensions.Logging, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" traceOutputOptions="None" filter="Information" name="DebugOut Listener" initializeData="" formatter="Brief"/>
      <add name="Error File Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" fileName="FMErrors.log" footer="" formatter="Default" header="" rollFileExistsBehavior="Increment" rollInterval="Day" rollSizeKB="0" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="5" traceOutputOptions="Callstack" filter="All"/>
      <add name="Rolling File Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" fileName="FMTrace.log" footer="" formatter="BriefWithDate" header="" rollFileExistsBehavior="Increment" rollInterval="Day" rollSizeKB="0" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="5" traceOutputOptions="None" filter="All"/>
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="{appDomain}:{category}: {title}: {message}" name="Brief"/>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="Timestamp: {timestamp}
Message: {message}
Category: {category}
Priority: {priority}
EventId: {eventid}
Severity: {severity}
Title:{title}
Machine: {machine}
Application Domain: {appDomain}
Process Id: {processId}
Process Name: {processName}
Win32 Thread Id: {win32ThreadId}
Thread Name: {threadName}
Extended Properties: {dictionary({key} - {value}
)}" name="Default"/>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="{timestamp(local)}{tab}{category}{tab}{severity}{tab}{title}{tab}{message}" name="BriefWithDate"/>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="{timestamp(local)}{tab}{message}" name="SuperBriefWithDate"/>
    </formatters>
    <categorySources>
      <add switchValue="Verbose" name="JobScheduler">
        <listeners>
          <add name="Rolling File Listener"/>
          <add name="DebugOut Listener"/>
        </listeners>
      </add>

      <add switchValue="Verbose" name="YahooService">
        <listeners>
          <add name="Rolling File Listener"/>
          <add name="DebugOut Listener"/>
        </listeners>
      </add>

      <add switchValue="All" name="Exception Category">
        <listeners>
          <add name="Error File Listener"/>
          <add name="DebugOut Listener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events"/>
      <notProcessed switchValue="All" name="Unprocessed Category"/>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="EventLog Listener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Default">
        <exceptionTypes>
          <add name="Exception" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add name="Logging Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="Exception Category" eventId="100" severity="Error" title="Default Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" useDefaultLogger="false"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Continue">
        <exceptionTypes>
          <add name="Exception" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="Exception Category" eventId="100" severity="Error" title="Default Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" useDefaultLogger="false"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>

  <connectionStrings>
    <add name="OptionModelContainer" connectionString="metadata=res://*/OptionModel.csdl|res://*/OptionModel.ssdl|res://*/OptionModel.msl;provider=System.Data.SqlServerCe.3.5;provider connection string=&quot;Data Source=C:\dev\OptionCalculator\OptionCalculator.sdf;Password=code03;Persist Security Info=True&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>
  <applicationSettings>
    <OptionCalculator.Services.JobScheduler.Properties.Settings>
      <setting name="TimeToWaitForShutdown" serializeAs="String">
        <value>60000</value>
      </setting>
      <setting name="ForceDebugger" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="ServiceName" serializeAs="String">
        <value>OptionCalculator.Scheduler</value>
      </setting>
      <setting name="ServiceDisplayName" serializeAs="String">
        <value>OptionCalculator Scheduler Service</value>
      </setting>
      <setting name="ServiceDescription" serializeAs="String">
        <value>OptionCalculator Scheduler Service</value>
      </setting>
      <setting name="Schedule" serializeAs="Xml">
        <value>
          <ArrayOfSchedule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <Schedule xsi:type="DailySchedule" ProviderType="OptionCalculator.Service.dll, OptionCalculator.YahooService" Type="DAILY" FromTime="00:00" ToTime="23:58" DaysToRun="2 3 4 5 6" Name="DailySchedule" Active="true" StartTime="2011-08-09T16:30:00.000000-04:00" Interval="0">
              <InitializationData/>
            </Schedule>
          </ArrayOfSchedule>
        </value>
      </setting>
    </OptionCalculator.Services.JobScheduler.Properties.Settings>
  </applicationSettings>
  <appSettings>
    <add key="Symbols" value="SPY,QQQ,VXX,VXZ,TIP,TLT,HYG,UUP,GLD,SLV,GDX,GDXJ,GG,ABX,KGC,SLW,AMZN,EGO,GOOG,AAPL,NFLX,USO,XLE,XLB,XLE,MS,JPM,RY,FB"/>
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
  </startup>
</configuration>
