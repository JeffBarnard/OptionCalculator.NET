//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OptionModel", "OptionDataOptionContracts", "OptionData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OptionCalculator.Entity.OptionData), "OptionContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OptionCalculator.Entity.Option), true)]
[assembly: EdmRelationshipAttribute("OptionModel", "OptionContractsContract", "OptionContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OptionCalculator.Entity.Option), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OptionCalculator.Entity.Contract), true)]
[assembly: EdmRelationshipAttribute("OptionModel", "StockDataStock", "StockData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OptionCalculator.Entity.StockQuote), "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OptionCalculator.Entity.Stock))]

#endregion

namespace OptionCalculator.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OptionModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OptionModelContainer object using the connection string found in the 'OptionModelContainer' section of the application configuration file.
        /// </summary>
        public OptionModelContainer() : base("name=OptionModelContainer", "OptionModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OptionModelContainer object.
        /// </summary>
        public OptionModelContainer(string connectionString) : base(connectionString, "OptionModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OptionModelContainer object.
        /// </summary>
        public OptionModelContainer(EntityConnection connection) : base(connection, "OptionModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionData> OptionData
        {
            get
            {
                if ((_OptionData == null))
                {
                    _OptionData = base.CreateObjectSet<OptionData>("OptionData");
                }
                return _OptionData;
            }
        }
        private ObjectSet<OptionData> _OptionData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Option> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Option>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Option> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractMonth> ContractMonths
        {
            get
            {
                if ((_ContractMonths == null))
                {
                    _ContractMonths = base.CreateObjectSet<ContractMonth>("ContractMonths");
                }
                return _ContractMonths;
            }
        }
        private ObjectSet<ContractMonth> _ContractMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stock> Stocks
        {
            get
            {
                if ((_Stocks == null))
                {
                    _Stocks = base.CreateObjectSet<Stock>("Stocks");
                }
                return _Stocks;
            }
        }
        private ObjectSet<Stock> _Stocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockQuote> StockQuotes
        {
            get
            {
                if ((_StockQuotes == null))
                {
                    _StockQuotes = base.CreateObjectSet<StockQuote>("StockQuotes");
                }
                return _StockQuotes;
            }
        }
        private ObjectSet<StockQuote> _StockQuotes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionData(OptionData optionData)
        {
            base.AddObject("OptionData", optionData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Option option)
        {
            base.AddObject("Options", option);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractMonths(ContractMonth contractMonth)
        {
            base.AddObject("ContractMonths", contractMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStocks(Stock stock)
        {
            base.AddObject("Stocks", stock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockQuotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockQuotes(StockQuote stockQuote)
        {
            base.AddObject("StockQuotes", stockQuote);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="expiration">Initial value of the Expiration property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Contract CreateContract(global::System.Guid id, global::System.DateTime expiration, global::System.String symbol)
        {
            Contract contract = new Contract();
            contract.Id = id;
            contract.Expiration = expiration;
            contract.Symbol = symbol;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Expiration
        {
            get
            {
                return _Expiration;
            }
            set
            {
                OnExpirationChanging(value);
                ReportPropertyChanging("Expiration");
                _Expiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expiration");
                OnExpirationChanged();
            }
        }
        private global::System.DateTime _Expiration;
        partial void OnExpirationChanging(global::System.DateTime value);
        partial void OnExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "OptionContractsContract", "OptionContracts")]
        public EntityCollection<Option> Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Option>("OptionModel.OptionContractsContract", "OptionContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Option>("OptionModel.OptionContractsContract", "OptionContracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="ContractMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractMonth object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="expiration">Initial value of the Expiration property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static ContractMonth CreateContractMonth(global::System.Int32 id, global::System.DateTime expiration, global::System.String symbol)
        {
            ContractMonth contractMonth = new ContractMonth();
            contractMonth.Id = id;
            contractMonth.Expiration = expiration;
            contractMonth.Symbol = symbol;
            return contractMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Expiration
        {
            get
            {
                return _Expiration;
            }
            set
            {
                OnExpirationChanging(value);
                ReportPropertyChanging("Expiration");
                _Expiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expiration");
                OnExpirationChanged();
            }
        }
        private global::System.DateTime _Expiration;
        partial void OnExpirationChanging(global::System.DateTime value);
        partial void OnExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="Option")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Option : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Option object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="contract">Initial value of the Contract property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="strike">Initial value of the Strike property.</param>
        public static Option CreateOption(global::System.Guid id, global::System.Guid contract, global::System.String type, global::System.String name, global::System.Decimal strike)
        {
            Option option = new Option();
            option.id = id;
            option.Contract = contract;
            option.Type = type;
            option.Name = name;
            option.Strike = strike;
            return option;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Contract
        {
            get
            {
                return _Contract;
            }
            set
            {
                OnContractChanging(value);
                ReportPropertyChanging("Contract");
                _Contract = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contract");
                OnContractChanged();
            }
        }
        private global::System.Guid _Contract;
        partial void OnContractChanging(global::System.Guid value);
        partial void OnContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Strike
        {
            get
            {
                return _Strike;
            }
            set
            {
                OnStrikeChanging(value);
                ReportPropertyChanging("Strike");
                _Strike = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Strike");
                OnStrikeChanged();
            }
        }
        private global::System.Decimal _Strike;
        partial void OnStrikeChanging(global::System.Decimal value);
        partial void OnStrikeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "OptionDataOptionContracts", "OptionData")]
        public EntityCollection<OptionData> OptionData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionData>("OptionModel.OptionDataOptionContracts", "OptionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionData>("OptionModel.OptionDataOptionContracts", "OptionData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "OptionContractsContract", "Contract")]
        public Contract ContractNav
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("OptionModel.OptionContractsContract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("OptionModel.OptionContractsContract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractNavReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("OptionModel.OptionContractsContract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("OptionModel.OptionContractsContract", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="OptionData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionData object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="lastPrice">Initial value of the LastPrice property.</param>
        /// <param name="change">Initial value of the Change property.</param>
        /// <param name="bid">Initial value of the Bid property.</param>
        /// <param name="ask">Initial value of the Ask property.</param>
        /// <param name="vol">Initial value of the Vol property.</param>
        /// <param name="openInterest">Initial value of the OpenInterest property.</param>
        /// <param name="option">Initial value of the Option property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="reference">Initial value of the Reference property.</param>
        public static OptionData CreateOptionData(global::System.Guid id, global::System.Decimal lastPrice, global::System.Decimal change, global::System.Decimal bid, global::System.Decimal ask, global::System.Decimal vol, global::System.Decimal openInterest, global::System.Guid option, global::System.DateTime timeStamp, global::System.Boolean reference)
        {
            OptionData optionData = new OptionData();
            optionData.id = id;
            optionData.LastPrice = lastPrice;
            optionData.Change = change;
            optionData.Bid = bid;
            optionData.Ask = ask;
            optionData.Vol = vol;
            optionData.OpenInterest = openInterest;
            optionData.Option = option;
            optionData.TimeStamp = timeStamp;
            optionData.Reference = reference;
            return optionData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LastPrice
        {
            get
            {
                return _LastPrice;
            }
            set
            {
                OnLastPriceChanging(value);
                ReportPropertyChanging("LastPrice");
                _LastPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrice");
                OnLastPriceChanged();
            }
        }
        private global::System.Decimal _LastPrice;
        partial void OnLastPriceChanging(global::System.Decimal value);
        partial void OnLastPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Change
        {
            get
            {
                return _Change;
            }
            set
            {
                OnChangeChanging(value);
                ReportPropertyChanging("Change");
                _Change = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Change");
                OnChangeChanged();
            }
        }
        private global::System.Decimal _Change;
        partial void OnChangeChanging(global::System.Decimal value);
        partial void OnChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                OnBidChanging(value);
                ReportPropertyChanging("Bid");
                _Bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bid");
                OnBidChanged();
            }
        }
        private global::System.Decimal _Bid;
        partial void OnBidChanging(global::System.Decimal value);
        partial void OnBidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Ask
        {
            get
            {
                return _Ask;
            }
            set
            {
                OnAskChanging(value);
                ReportPropertyChanging("Ask");
                _Ask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ask");
                OnAskChanged();
            }
        }
        private global::System.Decimal _Ask;
        partial void OnAskChanging(global::System.Decimal value);
        partial void OnAskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Vol
        {
            get
            {
                return _Vol;
            }
            set
            {
                OnVolChanging(value);
                ReportPropertyChanging("Vol");
                _Vol = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vol");
                OnVolChanged();
            }
        }
        private global::System.Decimal _Vol;
        partial void OnVolChanging(global::System.Decimal value);
        partial void OnVolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OpenInterest
        {
            get
            {
                return _OpenInterest;
            }
            set
            {
                OnOpenInterestChanging(value);
                ReportPropertyChanging("OpenInterest");
                _OpenInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenInterest");
                OnOpenInterestChanged();
            }
        }
        private global::System.Decimal _OpenInterest;
        partial void OnOpenInterestChanging(global::System.Decimal value);
        partial void OnOpenInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Option
        {
            get
            {
                return _Option;
            }
            set
            {
                OnOptionChanging(value);
                ReportPropertyChanging("Option");
                _Option = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Option");
                OnOptionChanged();
            }
        }
        private global::System.Guid _Option;
        partial void OnOptionChanging(global::System.Guid value);
        partial void OnOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.Boolean _Reference;
        partial void OnReferenceChanging(global::System.Boolean value);
        partial void OnReferenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "OptionDataOptionContracts", "OptionContracts")]
        public Option OptionNav
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Option>("OptionModel.OptionDataOptionContracts", "OptionContracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Option>("OptionModel.OptionDataOptionContracts", "OptionContracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Option> OptionNavReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Option>("OptionModel.OptionDataOptionContracts", "OptionContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Option>("OptionModel.OptionDataOptionContracts", "OptionContracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="Stock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stock object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Stock CreateStock(global::System.Guid id, global::System.String symbol)
        {
            Stock stock = new Stock();
            stock.Id = id;
            stock.Symbol = symbol;
            return stock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "StockDataStock", "StockData")]
        public EntityCollection<StockQuote> StockQuotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockQuote>("OptionModel.StockDataStock", "StockData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockQuote>("OptionModel.StockDataStock", "StockData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OptionModel", Name="StockQuote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockQuote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockQuote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="lastPrice">Initial value of the LastPrice property.</param>
        public static StockQuote CreateStockQuote(global::System.Guid id, global::System.DateTime timeStamp, global::System.Double lastPrice)
        {
            StockQuote stockQuote = new StockQuote();
            stockQuote.Id = id;
            stockQuote.TimeStamp = timeStamp;
            stockQuote.LastPrice = lastPrice;
            return stockQuote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LastPrice
        {
            get
            {
                return _LastPrice;
            }
            set
            {
                OnLastPriceChanging(value);
                ReportPropertyChanging("LastPrice");
                _LastPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrice");
                OnLastPriceChanged();
            }
        }
        private global::System.Double _LastPrice;
        partial void OnLastPriceChanging(global::System.Double value);
        partial void OnLastPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OptionModel", "StockDataStock", "Stock")]
        public Stock Stock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("OptionModel.StockDataStock", "Stock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("OptionModel.StockDataStock", "Stock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock> StockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("OptionModel.StockDataStock", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock>("OptionModel.StockDataStock", "Stock", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
